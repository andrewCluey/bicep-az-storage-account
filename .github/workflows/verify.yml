name: 'ARM Validation'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  verify:
    name: 'arm template verification'
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu, macos, or windows
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout Self
      uses: actions/checkout@v3

    - name: Checkout checkov custom policies
      uses: actions/checkout@v3
      with:
        repository: andrewCluey/checkov-policy-cis
        path: 'policies'     # azure/2.0

    - name: Show local directory
      run: pwd

    - name: list local directory
      run: ls

    - name: show local directory tree
      run: tree 

    - name: ARM Template Toolkit (ARM TTK)
      id: testARM
      uses: aliencube/arm-ttk-actions@v0.3
      with:
        # ARM Template file path to run the test. It can be either a directory or single file.
        path: ./main.json

        
    - name: ARM TTK result
      shell: bash
      continue-on-error: true   # consider changing this to false for strict enforcement of best practice.
      run: |
        echo "${{ toJSON(fromJSON(steps.testARM.outputs.results)) }}"

    - name: install checkov
      shell: bash
      run: sudo python3.10 -m pip install -U checkov

    - name: run checkov
      shell: bash
      run: checkov -d . --external-checks-dir ./policies/azure/2.0
        
    #- name: Checkov validation
      # You may pin to the exact commit or the version.
    #  uses: bridgecrewio/checkov-action@v12.1347.0
    #  with:
    #    external_checks_dirs: ./policies/azure/2.0    # Optional! comma separated list of external (custom) checks repositories

    #- name: Pester test deployment
      

  release:
    name: 'Release new version'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: verify
    if: github.ref == 'refs/heads/main'
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu, macos, or windows
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    ##############
    # Tag git repo
    ##############
    - name: Bump version & tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    
    ##############
    # Login to Azure and publish module to private registry (ACR).
    ##############
    #- name: Azure Login
    #  uses: azure/login@v1
    #  with:
    #    creds: ${{ secrets.AZURE_CREDENTIALS }}

    #- name: Publish module
    #  uses: azure/CLI@v1
    #  with:
    #    azcliversion: 2.30.0
    #    inlineScript: |
    #      az bicep publish --file main.bicep --target br:$registry/module/path:${{ steps.tag_version.outputs.new_tag }}